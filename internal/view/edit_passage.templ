package view

import (
    "time"
    "fmt"
    "strconv"

    "github.com/go-playground/validator/v10"
	"main/internal/model"
)

type EditPassageViewModel struct {
    Passage model.Passage
    Errors *validator.ValidationErrors
}

func formatDate(date *time.Time) string {
    if date == nil {
        return ""
    } else {
        return date.Format("2006-01-02")
    }
}

func stringifyInt(n *int) string {
    if (n == nil) {
        return ""
    } else {
        return strconv.Itoa(*n)
    }
}

templ EditPassageForm(model EditPassageViewModel) {
  <form hx-put={string(templ.URL(fmt.Sprintf("/passages/%v", model.Passage.Id)))} hx-swap="outerHTML">
    <div class="mb-4">
        @label(labelModel{
            Text: "Reference",
            For: "reference",
        })
        @textInput(textInputModel{
            Id:    "reference",
            Class: "w-full block",
            Name:  "reference",
            Value: model.Passage.Reference.String(),
        })
        @validationError(validationErrorModel{
            Errors: model.Errors,
            Field: "Reference",
            Messages: map[string]string{
                "required": "Please enter a verse reference.",
                "reference": "Please enter a valid verse reference.",
            },
        })
    </div>
    <div class="mb-4 flex gap-4">
      <div>
        @label(labelModel{
            Text: "Reference",
            For: "reference",
        })
        @textInput(textInputModel{
            Id:    "review-at",
            Type:  "date",
            Class: "w-full block",
            Name:  "review_at",
            Value: formatDate(model.Passage.NextReview),
        })
      </div>
      <div>
        @label(labelModel{
            Text: "Interval",
            For: "interval",
        })
        <div>
            @textInput(textInputModel{
                Id:    "interval",
                Type:  "number",
                Class: "w-16 mr-2",
                Name:  "interval",
                Value: stringifyInt(model.Passage.Interval),
            })
            days
        </div>
        @validationError(validationErrorModel{
            Errors: model.Errors,
            Field: "Interval",
            Messages: map[string]string{
                "min": "Please enter an interval greater than 0",
            },
        })
      </div>
    </div>
    <div class="mb-4">
        @label(labelModel{
            Text: "Text",
            For: "text",
        })
        @textInput(textInputModel{
            Id:        "text",
            Type: "multiline",
            Class:     "h-32 min-h-32 resize-y block w-full",
            Name:      "text",
            Value:     model.Passage.Text,
        })
        @validationError(validationErrorModel{
            Errors: model.Errors,
            Field: "Text",
            Messages: map[string]string{
                "required": "Please enter the passage text.",
            },
        })
    </div>
    @button(buttonModel{
        Text: "Update",
        Type: "submit",
        Class: "w-full",
    })
  </form>
}

templ EditPassageView(model EditPassageViewModel) {
    <div class="p-4">
        <h1 class="font-bold text-lg mb-2">Edit {model.Passage.Reference.String()}</h1>
        @EditPassageForm(model)
    </div>
}
