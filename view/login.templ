package view

import "github.com/go-playground/validator/v10"

type LoginPageModel struct {
	Email string

	Error string
    ValidationErrors *validator.ValidationErrors
}

templ LoginForm(model LoginPageModel) {
    <form action="/login" method="POST" hx-swap="outerHTML" hx-target="this">
        if model.Error != "" {
            <div class="text-red-700 mb-4 font-bold">
                { model.Error }
            </div>
        }
        <div class="mb-4">
            @label(labelModel{for_: "email"}) {
                Email
            }
            @textInput(textInputModel{
                id:    "email",
                class: "block",
                name:  "email",
                value: model.Email,
                type_: "email",
            })
            @validationError(validationErrorModel{
                err: model.ValidationErrors,
                field: "Email",
                messages: map[string]string{
                    "required": "Please enter your email address.",
                    "email": "Please enter a valid email address",
                },
            })
        </div>
        <div class="mb-4">
            @label(labelModel{for_: "password"}) {
                Password
            }
            @textInput(textInputModel{
                id:    "password",
                class: "block",
                name:  "password",
                type_: "password",
            })
            @validationError(validationErrorModel{
                err: model.ValidationErrors,
                field: "Password",
                messages: map[string]string{
                    "required": "Please enter your password.",
                },

            })
        </div>
        @button() {
            Log In 
        }
    </form>
}

templ LoginPage(model LoginPageModel) {
	<div class="p-4 flex justify-center">
		<div>
			<h2 class="view-heading">Log In</h2>
            @LoginForm(model)
		</div>
	</div>
}
