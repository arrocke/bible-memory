package view

import "github.com/go-playground/validator/v10"

type RegisterPageModel struct {
    Email string;
    FirstName string;
    LastName string

    Error string;
    ValidationErrors *validator.ValidationErrors
}

templ RegisterForm(model RegisterPageModel) {
    <form action="/register" method="POST" hx-swap="outerHTML" hx-target="this">
        if model.Error != "" {
            <div class="text-red-700 mb-4 font-bold">
              {model.Error}
            </div>
        }
      <div class="mb-4">
        @label(labelModel{for_: "email"}) {
            Email
        }
        @textInput(textInputModel{
            id:    "email",
            class: "block",
            name:  "email",
            value: model.Email,
            type_: "email",
        })
        @validationError(validationErrorModel{
            err: model.ValidationErrors,
            field: "Email",
            messages: map[string]string{
                "required": "Please enter your email address.",
                "email": "Please enter a valid email address",
            },
        })
      </div>
      <div class="mb-4 flex gap-4">
        <div class="flex-1 flex-shrink-0">
            @label(labelModel{for_: "first-name"}) {
                First Name
            }
            @textInput(textInputModel{
                id:    "first-name",
                class: "block",
                name:  "first_name",
                value: model.FirstName,
                type_: "text",
            })
            @validationError(validationErrorModel{
                err: model.ValidationErrors,
                field: "FirstName",
                messages: map[string]string{
                    "required": "Please enter your first name.",
                },
            })
        </div>
        <div class="flex-1 flex-shrink-0">
            @label(labelModel{for_: "last-name"}) {
                Last Name
            }
            @textInput(textInputModel{
                id:    "last-name",
                class: "block",
                name:  "last_name",
                value: model.LastName,
                type_: "text",
            })
            @validationError(validationErrorModel{
                err: model.ValidationErrors,
                field: "LastName",
                messages: map[string]string{
                    "required": "Please enter your last name.",
                },
            })
        </div>
      </div>
      <div class="mb-4 flex gap-4">
        <div class="flex-1 flex-shrink-0">
            @label(labelModel{for_: "password"}) {
                Password
            }
            @textInput(textInputModel{
                id:    "password",
                class: "block",
                name:  "password",
                type_: "password",
            })
            @validationError(validationErrorModel{
                err: model.ValidationErrors,
                field: "Password",
                messages: map[string]string{
                    "required": "Please enter your password.",
                    "min": "Please use a password of at least {param} characters.",
                },

            })
        </div>
        <div class="flex-1 flex-shrink-0">
            @label(labelModel{for_: "confirm-password"}) {
                Confirm Password
            }
            @textInput(textInputModel{
                id:    "confirm-password",
                class: "block",
                name:  "confirm_password",
                type_: "password",
            })
            @validationError(validationErrorModel{
                err: model.ValidationErrors,
                field: "ConfirmPassword",
                messages: map[string]string{
                    "required": "Please enter your password.",
                    "eqfield": "Your password confirmation does not match.",
                },

            })
        </div>
      </div>
        @button() {
            Log In 
        }
    </form>
}

templ RegisterPage(model RegisterPageModel) {
    <div id="register" class="p-4 flex justify-center">
      <div>
        <h2 class="view-heading">Register</h2>
        @RegisterForm(model)
      </div>
    </div>
}
